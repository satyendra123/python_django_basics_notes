Step-1 django-admin startproject authentication
       cd authentication
       python manage.py createapp basicauthentication

Step-2 settings.py code

"""
Django settings for authentication project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-)4@h1ym2g4bqg4p%jmd7+24w4!))&6$9@*#lxt97(g=casu(%f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'basicauthentication',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'authentication.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'authentication.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
'''
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
'''
# authentication/settings.py

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'authentication',
        'USER': 'root',
        'PASSWORD': '',
        'HOST': 'localhost',  # Set to 'localhost' if the database is on the same machine
        'PORT': '3306',                # Default MySQL port
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.BasicAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}

Step-3 basicauthentication/admin.py

from django.contrib import admin
from .models import Student
# Register your models here.
@admin.register(Student)
class StudentAdmin(admin.ModelAdmin):
    list_display = ['id', 'name', 'roll', 'email', 'city']

Step-4 basicauthentication/models.py

from django.db import models

class Student(models.Model):
    id = models.AutoField(primary_key=True)
    name = models.CharField(max_length=255)
    roll = models.IntegerField(unique=True)
    email = models.EmailField(unique=True)
    city = models.CharField(max_length=100, default='Unknown')

Step-5 basicauthentication/Serializers.py

# basicauthentication/serializers.py
from rest_framework import serializers
from .models import Student  # Replace with your actual model

class StudentSerializer(serializers.ModelSerializer):
    class Meta:
        model = Student
        fields = '__all__'

Step-6 basicauthentication/urls.py

from django.urls import path, include
from rest_framework.routers import DefaultRouter
from .views import StudentModelViewSet

# Creating Router object
router = DefaultRouter()
# Register StudentViewSet with router
router.register('students', StudentModelViewSet, basename='students')

urlpatterns = [
    # Include router URLs
    path('', include(router.urls)),
]

Step-7 basicauthentication/views.py

from rest_framework import viewsets
from .models import Student
from .Serializers import StudentSerializer
from rest_framework.authentication import BasicAuthentication
from rest_framework.permissions import IsAuthenticated

class StudentModelViewSet(viewsets.ModelViewSet):
    queryset = Student.objects.all()
    serializer_class = StudentSerializer
    #authentication_classes = [BasicAuthentication]
    #permission_classes = [IsAuthenticated]

    #NOTE- agar to humne settings.py me add kar diya hai to hume yaha pass kuch bhi likhne ki jarurat nahi hai authentication ke liye kyuki settings.py me likhne par wo globally hi lene lag jata hai bydefault sabhi api ke liye
    # lekin agar humne settings.py me add nahi kiya hai to hume yaha likhna padhega sabhi class ke niche kuch is tarah se jaise maine upar likhakar use comment kar diya hai
    
    '''
    class StudentModelViewSet2(viewsets.ModelViewSet):
    queryset = Student.objects.all()
    serializer_class = StudentSerializer
    #authentication_classes = [BasicAuthentication]
    #permission_classes = [AllowAny]   mai chahta hu ki jo 2 number wala class hai ise koi bhi unregistered user bhi access kar sake to mai simply isme akar change kar dunga
    
    class StudentModelViewSet3(viewsets.ModelViewSet):
    queryset = Student.objects.all()
    serializer_class = StudentSerializer
    #authentication_classes = [BasicAuthentication]
    #permission_classes = [IsAuthenticated]
'''

Step-8 main urls.py

from django.contrib import admin
from django.urls import path, include

urlpatterns = [
    path('admin/', admin.site.urls),
    path('api/', include('basicauthentication.urls')),
]

Step-9  python manage.py makemigrations
        python manage.py migrate
        python manage.py runserver

Step-10 so ab agar hum url ko open krenge http://127.0.0.1:8000/api/students/ to ye humse username aur passdword puchega to hum wahi denge isme jo humne python manage.py createsuperuser
 se banaya tha wahi username aur password denge hum yaha pass.

Step-11 isme humne superuser create kiya hai simply sattu and password Sattu
